/*
 * API_UART.c
 *
 *  Created on: Dec 12, 2023
 *      Author: Royer Sanabria
 */
#include "main.h"
#include "BMP280_Funtion.h"
#include "API_Delay.h"
#include "API_UART.h"
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define Delay_Max_UART 100
#define BUFFER_SIZE 2
static uint8_t Data[256];
static uint8_t rx_buffer[BUFFER_SIZE]; // Buffer que almacena los datos recibidos por la UART por interrupci√≥n
static uint16_t UART_Date;
volatile uint8_t rx_data_ready = 0;

void UART_TrasmitSensor(UART_HandleTypeDef huart2, ReadSensor Dato){
	sprintf((char *)Data,"Presion: %.2f Pa, Temperatura: %.2f, Altura: %.2f \r\n",Dato.Presion, Dato.Temperatura, Dato.altura);
	HAL_UART_Transmit(&huart2, Data, strlen(Data), Delay_Max_UART);
}
/*
void UART_Set_Altura(){

}*/

 UARTRead UART_Read(UART_HandleTypeDef*huart){
UARTRead UartRead;
	if (rx_data_ready) {
		rx_data_ready = 0;
	    UartRead.dato=UART_Date;
	    UartRead.estado=true;
		HAL_UART_Receive_IT(huart, rx_buffer, BUFFER_SIZE);
		}
	else{
	    UartRead.estado=false;
	}
return UartRead;
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef*huart) {

			UART_Date= atoi((char *)rx_buffer);
		 	HAL_UART_Transmit(huart,(uint8_t *)rx_buffer,sizeof(rx_buffer), Delay_Max_UART);
			rx_data_ready = 1;
}

